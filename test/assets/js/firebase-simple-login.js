(function () {
  const COMPILED = !0; var goog = goog || {}; goog.global = this; goog.exportPath_ = function (a, d, e) { a = a.split('.'); e = e || goog.global; a[0] in e || !e.execScript || e.execScript(`var ${a[0]}`); for (var f; a.length && (f = a.shift());)a.length || void 0 === d ? e = e[f] ? e[f] : e[f] = {} : e[f] = d; }; goog.define = function (a, d) { let e = d; COMPILED || goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (e = goog.global.CLOSURE_DEFINES[a]); goog.exportPath_(a, e); }; goog.DEBUG = !0; goog.LOCALE = 'en'; goog.TRUSTED_SITE = !0;
  goog.provide = function (a) { if (!COMPILED) { if (goog.isProvided_(a)) throw Error(`Namespace "${a}" already declared.`); delete goog.implicitNamespaces_[a]; for (let d = a; (d = d.substring(0, d.lastIndexOf('.'))) && !goog.getObjectByName(d);)goog.implicitNamespaces_[d] = !0; }goog.exportPath_(a); }; goog.setTestOnly = function (a) { if (COMPILED && !goog.DEBUG) throw a = a || '', Error(`Importing test-only code into non-debug environment${a}` ? `: ${a}` : '.'); }; goog.forwardDeclare = function (a) {};
  COMPILED || (goog.isProvided_ = function (a) { return !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a)); }, goog.implicitNamespaces_ = {}); goog.getObjectByName = function (a, d) { for (var e = a.split('.'), f = d || goog.global, g; g = e.shift();) if (goog.isDefAndNotNull(f[g]))f = f[g]; else return null; return f; }; goog.globalize = function (a, d) { const e = d || goog.global; let f; for (f in a)e[f] = a[f]; };
  goog.addDependency = function (a, d, e) { if (goog.DEPENDENCIES_ENABLED) { let f; a = a.replace(/\\/g, '/'); for (var g = goog.dependencies_, h = 0; f = d[h]; h++)g.nameToPath[f] = a, a in g.pathToNames || (g.pathToNames[a] = {}), g.pathToNames[a][f] = !0; for (f = 0; d = e[f]; f++)a in g.requires || (g.requires[a] = {}), g.requires[a][d] = !0; } }; goog.ENABLE_DEBUG_LOADER = !0;
  goog.require = function (a) { if (!COMPILED && !goog.isProvided_(a)) { if (goog.ENABLE_DEBUG_LOADER) { const d = goog.getPathFromDeps_(a); if (d) { goog.included_[d] = !0; goog.writeScripts_(); return; } }a = `goog.require could not find: ${a}`; goog.global.console && goog.global.console.error(a); throw Error(a); } }; goog.basePath = ''; goog.nullFunction = function () {}; goog.identityFunction = function (a, d) { return a; }; goog.abstractMethod = function () { throw Error('unimplemented abstract method'); };
  goog.addSingletonGetter = function (a) { a.getInstance = function () { if (a.instance_) return a.instance_; goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a); return a.instance_ = new a(); }; }; goog.instantiatedSingletons_ = []; goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
  goog.DEPENDENCIES_ENABLED && (goog.included_ = {}, goog.dependencies_ = {
    pathToNames: {}, nameToPath: {}, requires: {}, visited: {}, written: {},
  }, goog.inHtmlDocument_ = function () { const a = goog.global.document; return typeof a !== 'undefined' && 'write' in a; }, goog.findBasePath_ = function () {
    if (goog.global.CLOSURE_BASE_PATH)goog.basePath = goog.global.CLOSURE_BASE_PATH; else if (goog.inHtmlDocument_()) {
      for (let a = goog.global.document.getElementsByTagName('script'), d = a.length - 1; d >= 0; --d) {
        const e = a[d].src; var f = e.lastIndexOf('?'); var f = f == -1 ? e.length
          : f; if (e.substr(f - 7, 7) == 'base.js') { goog.basePath = e.substr(0, f - 7); break; }
      }
    }
  }, goog.importScript_ = function (a) { const d = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_; !goog.dependencies_.written[a] && d(a) && (goog.dependencies_.written[a] = !0); }, goog.writeScriptTag_ = function (a) {
    if (goog.inHtmlDocument_()) {
      const d = goog.global.document; if (d.readyState == 'complete') { if (/\bdeps.js$/.test(a)) return !1; throw Error(`Cannot write "${a}" after document load`); }d.write(`<script type="text/javascript" src="${a}">\x3c/script>`);
      return !0;
    } return !1;
  }, goog.writeScripts_ = function () {
    function a(g) { if (!(g in f.written)) { if (!(g in f.visited) && (f.visited[g] = !0, g in f.requires)) for (const k in f.requires[g]) if (!goog.isProvided_(k)) if (k in f.nameToPath)a(f.nameToPath[k]); else throw Error(`Undefined nameToPath for ${k}`); g in e || (e[g] = !0, d.push(g)); } } var d = []; var e = {}; var f = goog.dependencies_; let g; for (g in goog.included_)f.written[g] || a(g); for (g = 0; g < d.length; g++) if (d[g])goog.importScript_(goog.basePath + d[g]); else throw Error('Undefined script input');
  }, goog.getPathFromDeps_ = function (a) { return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null; }, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(`${goog.basePath}deps.js`));
  goog.typeOf = function (a) {
    const d = typeof a; if (d == 'object') if (a) { if (a instanceof Array) return 'array'; if (a instanceof Object) return d; const e = Object.prototype.toString.call(a); if (e == '[object Window]') return 'object'; if (e == '[object Array]' || typeof a.length === 'number' && typeof a.splice !== 'undefined' && typeof a.propertyIsEnumerable !== 'undefined' && !a.propertyIsEnumerable('splice')) return 'array'; if (e == '[object Function]' || typeof a.call !== 'undefined' && typeof a.propertyIsEnumerable !== 'undefined' && !a.propertyIsEnumerable('call')) return 'function'; } else return 'null';
    else if (d == 'function' && typeof a.call === 'undefined') return 'object'; return d;
  }; goog.isDef = function (a) { return void 0 !== a; }; goog.isNull = function (a) { return a === null; }; goog.isDefAndNotNull = function (a) { return a != null; }; goog.isArray = function (a) { return goog.typeOf(a) == 'array'; }; goog.isArrayLike = function (a) { const d = goog.typeOf(a); return d == 'array' || d == 'object' && typeof a.length === 'number'; }; goog.isDateLike = function (a) { return goog.isObject(a) && typeof a.getFullYear === 'function'; }; goog.isString = function (a) { return typeof a === 'string'; };
  goog.isBoolean = function (a) { return typeof a === 'boolean'; }; goog.isNumber = function (a) { return typeof a === 'number'; }; goog.isFunction = function (a) { return goog.typeOf(a) == 'function'; }; goog.isObject = function (a) { const d = typeof a; return d == 'object' && a != null || d == 'function'; }; goog.getUid = function (a) { return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_); }; goog.hasUid = function (a) { return !!a[goog.UID_PROPERTY_]; }; goog.removeUid = function (a) { 'removeAttribute' in a && a.removeAttribute(goog.UID_PROPERTY_); try { delete a[goog.UID_PROPERTY_]; } catch (d) {} };
  goog.UID_PROPERTY_ = `closure_uid_${1E9 * Math.random() >>> 0}`; goog.uidCounter_ = 0; goog.getHashCode = goog.getUid; goog.removeHashCode = goog.removeUid; goog.cloneObject = function (a) { var d = goog.typeOf(a); if (d == 'object' || d == 'array') { if (a.clone) return a.clone(); var d = d == 'array' ? [] : {}; let e; for (e in a)d[e] = goog.cloneObject(a[e]); return d; } return a; }; goog.bindNative_ = function (a, d, e) { return a.call.apply(a.bind, arguments); };
  goog.bindJs_ = function (a, d, e) { if (!a) throw Error(); if (arguments.length > 2) { const f = Array.prototype.slice.call(arguments, 2); return function () { const e = Array.prototype.slice.call(arguments); Array.prototype.unshift.apply(e, f); return a.apply(d, e); }; } return function () { return a.apply(d, arguments); }; }; goog.bind = function (a, d, e) { Function.prototype.bind && Function.prototype.bind.toString().indexOf('native code') != -1 ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_; return goog.bind.apply(null, arguments); };
  goog.partial = function (a, d) { const e = Array.prototype.slice.call(arguments, 1); return function () { const d = e.slice(); d.push(...arguments); return a.apply(this, d); }; }; goog.mixin = function (a, d) { for (const e in d)a[e] = d[e]; }; goog.now = goog.TRUSTED_SITE && Date.now || function () { return +new Date(); };
  goog.globalEval = function (a) {
    if (goog.global.execScript)goog.global.execScript(a, 'JavaScript'); else if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null && (goog.global.eval('var _et_ = 1;'), typeof goog.global._et_ !== 'undefined' ? (delete goog.global._et_, goog.evalWorksForGlobals_ = !0) : goog.evalWorksForGlobals_ = !1), goog.evalWorksForGlobals_)goog.global.eval(a); else {
        const d = goog.global.document; const e = d.createElement('script'); e.type = 'text/javascript'; e.defer = !1; e.appendChild(d.createTextNode(a)); d.body.appendChild(e);
        d.body.removeChild(e);
      }
    } else throw Error('goog.globalEval not available');
  }; goog.evalWorksForGlobals_ = null; goog.getCssName = function (a, d) { const e = function (a) { return goog.cssNameMapping_[a] || a; }; var f = function (a) { a = a.split('-'); for (var d = [], f = 0; f < a.length; f++)d.push(e(a[f])); return d.join('-'); }; var f = goog.cssNameMapping_ ? goog.cssNameMappingStyle_ == 'BY_WHOLE' ? e : f : function (a) { return a; }; return d ? `${a}-${f(d)}` : f(a); }; goog.setCssNameMapping = function (a, d) { goog.cssNameMapping_ = a; goog.cssNameMappingStyle_ = d; };
  !COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING); goog.getMsg = function (a, d) { const e = d || {}; let f; for (f in e) { const g = (`${e[f]}`).replace(/\$/g, '$$$$'); a = a.replace(RegExp(`\\{\\$${f}\\}`, 'gi'), g); } return a; }; goog.getMsgWithFallback = function (a, d) { return a; }; goog.exportSymbol = function (a, d, e) { goog.exportPath_(a, d, e); }; goog.exportProperty = function (a, d, e) { a[d] = e; };
  goog.inherits = function (a, d) { function e() {}e.prototype = d.prototype; a.superClass_ = d.prototype; a.prototype = new e(); a.prototype.constructor = a; a.base = function (a, e, h) { const k = Array.prototype.slice.call(arguments, 2); return d.prototype[e].apply(a, k); }; };
  goog.base = function (a, d, e) {
    const f = arguments.callee.caller; if (goog.DEBUG && !f) throw Error('arguments.caller not defined.  goog.base() expects not to be running in strict mode. See http://www.ecma-international.org/ecma-262/5.1/#sec-C'); if (f.superClass_) return f.superClass_.constructor.apply(a, Array.prototype.slice.call(arguments, 1)); for (var g = Array.prototype.slice.call(arguments, 2), h = !1, k = a.constructor; k; k = k.superClass_ && k.superClass_.constructor) {
      if (k.prototype[d] === f)h = !0; else if (h) {
        return k.prototype[d].apply(a,
          g);
      }
    } if (a[d] === f) return a.constructor.prototype[d].apply(a, g); throw Error('goog.base called from a method of one name to a method of a different name');
  }; goog.scope = function (a) { a.call(goog.global); }; const fb = { simplelogin: {} }; fb.simplelogin.Vars_ = function () { this.apiHost = 'https://auth.firebase.com'; }; fb.simplelogin.Vars_.prototype.setApiHost = function (a) { this.apiHost = a; }; fb.simplelogin.Vars_.prototype.getApiHost = function () { return this.apiHost; }; fb.simplelogin.Vars = new fb.simplelogin.Vars_(); goog.json = {}; goog.json.USE_NATIVE_JSON = !1; goog.json.isValid_ = function (a) { return /^\s*$/.test(a) ? !1 : /^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g, '@').replace(/"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, '')); };
  goog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function (a) { a = String(a); if (goog.json.isValid_(a)) try { return eval(`(${a})`); } catch (d) {} throw Error(`Invalid JSON string: ${a}`); }; goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function (a) { return eval(`(${a})`); }; goog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global.JSON.stringify : function (a, d) { return (new goog.json.Serializer(d)).serialize(a); }; goog.json.Serializer = function (a) { this.replacer_ = a; };
  goog.json.Serializer.prototype.serialize = function (a) { const d = []; this.serialize_(a, d); return d.join(''); };
  goog.json.Serializer.prototype.serialize_ = function (a, d) { switch (typeof a) { case 'string': this.serializeString_(a, d); break; case 'number': this.serializeNumber_(a, d); break; case 'boolean': d.push(a); break; case 'undefined': d.push('null'); break; case 'object': if (a == null) { d.push('null'); break; } if (goog.isArray(a)) { this.serializeArray(a, d); break; } this.serializeObject_(a, d); break; case 'function': break; default: throw Error(`Unknown type: ${typeof a}`); } };
  goog.json.Serializer.charToJsonCharCache_ = {
    '"': '\\"', '\\': '\\\\', '/': '\\/', '\b': '\\b', '\f': '\\f', '\n': '\\n', '\r': '\\r', '\t': '\\t', '\x0B': '\\u000b',
  }; goog.json.Serializer.charsToReplace_ = /\uffff/.test('\uffff') ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
  goog.json.Serializer.prototype.serializeString_ = function (a, d) { d.push('"', a.replace(goog.json.Serializer.charsToReplace_, (a) => { if (a in goog.json.Serializer.charToJsonCharCache_) return goog.json.Serializer.charToJsonCharCache_[a]; const d = a.charCodeAt(0); let g = '\\u'; d < 16 ? g += '000' : d < 256 ? g += '00' : d < 4096 && (g += '0'); return goog.json.Serializer.charToJsonCharCache_[a] = g + d.toString(16); }), '"'); }; goog.json.Serializer.prototype.serializeNumber_ = function (a, d) { d.push(isFinite(a) && !isNaN(a) ? a : 'null'); };
  goog.json.Serializer.prototype.serializeArray = function (a, d) { const e = a.length; d.push('['); for (let f = '', g = 0; g < e; g++)d.push(f), f = a[g], this.serialize_(this.replacer_ ? this.replacer_.call(a, String(g), f) : f, d), f = ','; d.push(']'); };
  goog.json.Serializer.prototype.serializeObject_ = function (a, d) { d.push('{'); let e = ''; let f; for (f in a) if (Object.prototype.hasOwnProperty.call(a, f)) { const g = a[f]; typeof g !== 'function' && (d.push(e), this.serializeString_(f, d), d.push(':'), this.serialize_(this.replacer_ ? this.replacer_.call(a, f, g) : g, d), e = ','); }d.push('}'); }; fb.simplelogin.util = {}; fb.simplelogin.util.json = {}; fb.simplelogin.util.json.parse = function (a) { return typeof JSON !== 'undefined' && goog.isDef(JSON.parse) ? JSON.parse(a) : goog.json.parse(a); }; fb.simplelogin.util.json.stringify = function (a) { return typeof JSON !== 'undefined' && goog.isDef(JSON.stringify) ? JSON.stringify(a) : goog.json.serialize(a); }; fb.simplelogin.transports = {}; fb.simplelogin.transports.Transport = {}; fb.simplelogin.Transport = function () {}; fb.simplelogin.Transport.prototype.open = function (a, d, e) {}; fb.simplelogin.transports.Popup = {}; fb.simplelogin.Popup = function () {}; fb.simplelogin.Popup.prototype.open = function (a, d, e) {}; fb.simplelogin.util.misc = {}; fb.simplelogin.util.misc.parseUrl = function (a) {
    const d = document.createElement('a'); d.href = a; return {
      protocol: d.protocol.replace(':', ''), host: d.hostname, port: d.port, query: d.search, params: fb.simplelogin.util.misc.parseQuerystring(d.search), hash: d.hash.replace('#', ''), path: d.pathname.replace(/^([^\/])/, '/$1'),
    };
  }; fb.simplelogin.util.misc.parseQuerystring = function (a) { const d = {}; a = a.replace(/^\?/, '').split('&'); for (let e = 0; e < a.length; e++) if (a[e]) { const f = a[e].split('='); d[f[0]] = f[1]; } return d; };
  fb.simplelogin.util.misc.parseSubdomain = function (a) { let d = ''; try { const e = fb.simplelogin.util.misc.parseUrl(a).host.split('.'); e.length > 2 && (d = e.slice(0, -2).join('.')); } catch (f) {} return d; }; fb.simplelogin.util.misc.warn = function (a) { typeof console !== 'undefined' && (typeof console.warn !== 'undefined' ? console.warn(a) : console.log(a)); }; const popupTimeout = 12E4; fb.simplelogin.transports.CordovaInAppBrowser_ = function () {};
  fb.simplelogin.transports.CordovaInAppBrowser_.prototype.open = function (a, d, e) {
    callbackInvoked = !1; const f = function () { const a = Array.prototype.slice.apply(arguments); callbackInvoked || (callbackInvoked = !0, e(...a)); }; const g = window.open(`${a}&transport=internal-redirect-hash`, 'blank', 'location=no'); g.addEventListener('loadstop', (a) => {
      let d; if (a && a.url && (a = fb.simplelogin.util.misc.parseUrl(a.url), a.path === '/blank/page.html')) {
        g.close(); try {
          const e = fb.simplelogin.util.misc.parseQuerystring(a.hash); a = {}; for (const n in e) {
            a[n] = fb.simplelogin.util.json.parse(decodeURIComponent(e[n]));
          }d = a;
        } catch (q) {}d && d.token && d.user ? f(null, d) : d && d.error ? f(d.error) : f({ code: 'RESPONSE_PAYLOAD_ERROR', message: 'Unable to parse response payload for PhoneGap.' });
      }
    }); g.addEventListener('exit', (a) => { f({ code: 'USER_DENIED', message: 'User cancelled the authentication request.' }); }); setTimeout(() => { g && g.close && g.close(); }, popupTimeout);
  }; fb.simplelogin.transports.CordovaInAppBrowser = new fb.simplelogin.transports.CordovaInAppBrowser_(); fb.simplelogin.Errors = {}; const messagePrefix = 'FirebaseSimpleLogin: '; const errors = {
    UNKNOWN_ERROR: 'An unknown error occurred.', INVALID_EMAIL: 'Invalid email specified.', INVALID_PASSWORD: 'Invalid password specified.', USER_DENIED: 'User cancelled the authentication request.', RESPONSE_PAYLOAD_ERROR: 'Unable to parse response payload.', TRIGGER_IO_TABS: 'The "forge.tabs" module required when using Firebase Simple Login and                               Trigger.io. Without this module included and enabled, login attempts to                               OAuth authentication providers will not be able to complete.',
  };
  fb.simplelogin.Errors.format = function (a, d) { let e; let f; let g = {}; const h = arguments; if (h.length === 2)e = h[0], f = h[1]; else if (h.length === 1) if (typeof h[0] === 'object' && h[0].code && h[0].message) { if (h[0].message.indexOf(messagePrefix) === 0) return h[0]; e = h[0].code; f = h[0].message; g = h[0].data; } else typeof h[0] === 'string' && (e = h[0], f = errors[e]); else e = 'UNKNOWN_ERROR', f = errors[e]; f = Error(messagePrefix + f); f.code = e; g && (f.data = g); return f; }; const RELAY_FRAME_NAME = '__winchan_relay_frame'; const CLOSE_CMD = 'die'; function addListener(a, d, e) { a.attachEvent ? a.attachEvent(`on${d}`, e) : a.addEventListener && a.addEventListener(d, e, !1); } function removeListener(a, d, e) { a.detachEvent ? a.detachEvent(`on${d}`, e) : a.removeEventListener && a.removeEventListener(d, e, !1); } function extractOrigin(a) { /^https?:\/\//.test(a) || (a = window.location.href); const d = /^(https?:\/\/[\-_a-zA-Z\.0-9:]+)/.exec(a); return d ? d[1] : a; }
  function findRelay() { for (var a = window.location, d = window.opener.frames, a = `${a.protocol}//${a.host}`, e = d.length - 1; e >= 0; e--) try { if (d[e].location.href.indexOf(a) === 0 && d[e].name === RELAY_FRAME_NAME) return d[e]; } catch (f) {} }
  const isInternetExplorer = (function () { let a; let d = -1; const e = navigator.userAgent; navigator.appName === 'Microsoft Internet Explorer' ? (a = /MSIE ([0-9]{1,}[\.0-9]{0,})/, (a = e.match(a)) && a.length > 1 && (d = parseFloat(a[1]))) : e.indexOf('Trident') > -1 && (a = /rv:([0-9]{2,2}[\.0-9]{0,})/, (a = e.match(a)) && a.length > 1 && (d = parseFloat(a[1]))); return d >= 8; }()); fb.simplelogin.transports.WinChan_ = function () {};
  fb.simplelogin.transports.WinChan_.prototype.open = function (a, d, e) {
    function f() { k && document.body.removeChild(k); k = void 0; s && (s = clearInterval(s)); removeListener(window, 'message', g); removeListener(window, 'unload', f); if (q) try { q.close(); } catch (a) { n.postMessage(CLOSE_CMD, l); }q = n = void 0; } function g(a) { if (a.origin === l) try { const d = fb.simplelogin.util.json.parse(a.data); d.a === 'ready' ? n.postMessage(m, l) : d.a === 'error' ? (f(), e && (e(d.d), e = null)) : d.a === 'response' && (f(), e && (e(null, d.d), e = null)); } catch (g) {} } if (!e) throw 'missing required callback argument';
    d.url = a; let h; d.url || (h = "missing required 'url' parameter"); d.relay_url || (h = "missing required 'relay_url' parameter"); h && setTimeout(() => { e(h); }, 0); d.window_name || (d.window_name = null); if (!d.window_features || fb.simplelogin.util.env.isFennec())d.window_features = void 0; let k; var l = extractOrigin(d.url); if (l !== extractOrigin(d.relay_url)) return setTimeout(() => { e('invalid arguments: origin of url and relay_url must match'); }, 0); let n; isInternetExplorer && (k = document.createElement('iframe'), k.setAttribute('src',
      d.relay_url), k.style.display = 'none', k.setAttribute('name', RELAY_FRAME_NAME), document.body.appendChild(k), n = k.contentWindow); var q = window.open(d.url, d.window_name, d.window_features); n || (n = q); var s = setInterval(() => { q && q.closed && (f(), e && (e('unknown closed window'), e = null)); }, 500); var m = fb.simplelogin.util.json.stringify({ a: 'request', d: d.params }); addListener(window, 'unload', f); addListener(window, 'message', g); return { close: f, focus() { if (q) try { q.focus(); } catch (a) {} } };
  };
  goog.exportSymbol('fb.simplelogin.transports.WinChan_.prototype.open', fb.simplelogin.transports.WinChan_.prototype.open);
  fb.simplelogin.transports.WinChan_.prototype.onOpen = function (a) {
    function d(a) { a = fb.simplelogin.util.json.stringify(a); isInternetExplorer ? h.doPost(a, g) : h.postMessage(a, g); } function e(f) { let h; try { h = fb.simplelogin.util.json.parse(f.data); } catch (n) {}h && h.a === 'request' && (removeListener(window, 'message', e), g = f.origin, a && setTimeout(() => { a(g, h.d, (e, f) => { k = !f; a = void 0; d({ a: 'response', d: e }); }); }, 0)); } function f(a) { if (k && a.data === CLOSE_CMD) try { window.close(); } catch (d) {} } var g = '*'; var h = isInternetExplorer
      ? findRelay() : window.opener; var k = !0; if (!h) throw "can't find relay frame"; addListener(isInternetExplorer ? h : window, 'message', e); addListener(isInternetExplorer ? h : window, 'message', f); try { d({ a: 'ready' }); } catch (l) { addListener(h, 'load', (a) => { d({ a: 'ready' }); }); } const n = function () { try { removeListener(isInternetExplorer ? h : window, 'message', f); } catch (e) {}a && d({ a: 'error', d: 'mongoFbClient closed window' }); a = void 0; try { window.close(); } catch (g) {} }; addListener(window, 'unload', n); return {
      detach() {
        removeListener(window, 'unload',
          n);
      },
    };
  }; goog.exportSymbol('fb.simplelogin.transports.WinChan_.prototype.onOpen', fb.simplelogin.transports.WinChan_.prototype.onOpen); fb.simplelogin.transports.WinChan_.prototype.isAvailable = function () { return fb.simplelogin.util.json && fb.simplelogin.util.json.parse && fb.simplelogin.util.json.stringify && window.postMessage; }; fb.simplelogin.transports.WinChan = new fb.simplelogin.transports.WinChan_(); fb.simplelogin.transports.TriggerIoTab_ = function () {};
  fb.simplelogin.transports.TriggerIoTab_.prototype.open = function (a, d, e) {
    callbackInvoked = !1; const f = function () { const a = Array.prototype.slice.apply(arguments); callbackInvoked || (callbackInvoked = !0, e(...a)); }; forge.tabs.openWithOptions({ url: `${a}&transport=internal-redirect-hash`, pattern: `${fb.simplelogin.Vars.getApiHost()}/blank/page*` }, (a) => {
      let d; if (a && a.url) {
        try {
          const e = fb.simplelogin.util.misc.parseUrl(a.url); const l = fb.simplelogin.util.misc.parseQuerystring(e.hash); a = {}; for (const n in l)a[n] = fb.simplelogin.util.json.parse(decodeURIComponent(l[n]));
          d = a;
        } catch (q) {}
      }d && d.token && d.user ? f(null, d) : d && d.error ? f(d.error) : f({ code: 'RESPONSE_PAYLOAD_ERROR', message: 'Unable to parse response payload for Trigger.io.' });
    }, (a) => { f({ code: 'UNKNOWN_ERROR', message: 'An unknown error occurred for Trigger.io.' }); });
  }; fb.simplelogin.transports.TriggerIoTab = new fb.simplelogin.transports.TriggerIoTab_(); let b; let c;
  !(function () { const a = {}; const d = {}; b = function (d, f, g) { a[d] = { deps: f, callback: g }; }; c = function (e) { function f(a) { if (a.charAt(0) !== '.') return a; a = a.split('/'); for (var d = e.split('/').slice(0, -1), f = 0, g = a.length; g > f; f++) { const k = a[f]; k === '..' ? d.pop() : k !== '.' && d.push(k); } return d.join('/'); } if (d[e]) return d[e]; if (d[e] = {}, !a[e]) throw Error(`Could not find module ${e}`); for (var g, h = a[e], k = h.deps, h = h.callback, l = [], n = 0, q = k.length; q > n; n++)l.push(k[n] === 'exports' ? g = {} : c(f(k[n]))); k = h.apply(this, l); return d[e] = g || k; }; c.entries = a; }());
  b('rsvp/all-settled', ['./promise', './utils', 'exports'], (a, d, e) => {
    const f = a.default;


    const g = d.isArray; const
      h = d.isNonThenable; e.default = function (a, d) {
      return new f(((d) => {
        function e(a) { return function (d) { m(a, { state: 'fulfilled', value: d }); }; } function l(a) { return function (d) { m(a, { state: 'rejected', reason: d }); }; } function m(a, e) { u[a] = e; --r === 0 && d(u); } if (!g(a)) throw new TypeError('You must pass an array to allSettled.'); let p; var r = a.length; if (r === 0) return void d([]); for (var u = Array(r), v = 0; v < a.length; v++) {
          p = a[v],
          h(p) ? m(v, { state: 'fulfilled', value: p }) : f.resolve(p).then(e(v), l(v));
        }
      }), d);
    };
  }); b('rsvp/all', ['./promise', 'exports'], (a, d) => { const e = a.default; d.default = function (a, d) { return e.all(a, d); }; });
  b('rsvp/asap', ['exports'], (a) => {
    function d() { return function () { process.nextTick(g); }; } function e() { let a = 0; const d = new k(g); const e = document.createTextNode(''); return d.observe(e, { characterData: !0 }), function () { e.data = a = ++a % 2; }; } function f() { return function () { setTimeout(g, 1); }; } function g() { for (let a = 0; a < l.length; a++) { const d = l[a]; (0, d[0])(d[1]); }l.length = 0; }a.default = function (a, d) { l.push([a, d]) === 1 && h(); }; let h; a = typeof window !== 'undefined' ? window : {}; var k = a.MutationObserver || a.WebKitMutationObserver; var l = []; h = typeof process
!== 'undefined' && {}.toString.call(process) === '[object process]' ? d() : k ? e() : f();
  }); b('rsvp/config', ['./events', 'exports'], (a, d) => { const e = { instrument: !1 }; a.default.mixin(e); d.config = e; d.configure = function (a, d) { return a === 'onerror' ? void e.on('error', d) : arguments.length !== 2 ? e[a] : void (e[a] = d); }; }); b('rsvp/defer', ['./promise', 'exports'], (a, d) => { const e = a.default; d.default = function (a) { const d = {}; return d.promise = new e(((a, e) => { d.resolve = a; d.reject = e; }), a), d; }; });
  b('rsvp/events', ['exports'], (a) => {
    function d(a, d) { for (let e = 0, k = a.length; k > e; e++) if (a[e] === d) return e; return -1; } function e(a) { let d = a._promiseCallbacks; return d || (d = a._promiseCallbacks = {}), d; }a.default = {
      mixin(a) { return a.on = this.on, a.off = this.off, a.trigger = this.trigger, a._promiseCallbacks = void 0, a; },
      on(a, g) { let h; const k = e(this); (h = k[a]) || (h = k[a] = []); d(h, g) === -1 && h.push(g); },
      off(a, g) { let h; let k; const l = e(this); return g ? (h = l[a], k = d(h, g), void (k !== -1 && h.splice(k, 1))) : void (l[a] = []); },
      trigger(a, d) { let h; if (h = e(this)[a]) for (let k = 0; k < h.length; k++)(0, h[k])(d); },
    };
  });
  b('rsvp/filter', ['./promise', './utils', 'exports'], (a, d, e) => {
    const f = a.default;


    const g = d.isFunction; e.default = function (a, d, e) { return f.all(a, e).then((a) => { if (!g(d)) throw new TypeError("You must pass a function as filter's second argument."); for (var h = a.length, s = Array(h), m = 0; h > m; m++)s[m] = d(a[m]); return f.all(s, e).then((d) => { for (var e = Array(h), f = 0, g = 0; h > g; g++)!0 === d[g] && (e[f] = a[g], f++); return e.length = f, e; }); }); };
  });
  b('rsvp/hash-settled', ['./promise', './utils', 'exports'], (a, d, e) => {
    const f = a.default;


    const g = d.isNonThenable; const
      h = d.keysOf; e.default = function (a) { return new f(((d) => { function e(a) { return function (d) { s(a, { state: 'fulfilled', value: d }); }; } function q(a) { return function (d) { s(a, { state: 'rejected', reason: d }); }; } function s(a, e) { r[a] = e; --v === 0 && d(r); } let m; let p; var r = {}; const u = h(a); var v = u.length; if (v === 0) return void d(r); for (let t = 0; t < u.length; t++)p = u[t], m = a[p], g(m) ? s(p, { state: 'fulfilled', value: m }) : f.resolve(m).then(e(p), q(p)); })); };
  });
  b('rsvp/hash', ['./promise', './utils', 'exports'], (a, d, e) => {
    const f = a.default; const g = d.isNonThenable;


    const h = d.keysOf; e.default = function (a) { return new f(((d, e) => { function q(a) { return function (e) { r[a] = e; --v === 0 && d(r); }; } function s(a) { v = 0; e(a); } let m; let p; var r = {}; const u = h(a); var v = u.length; if (v === 0) return void d(r); for (let t = 0; t < u.length; t++)p = u[t], m = a[p], g(m) ? (r[p] = m, --v === 0 && d(r)) : f.resolve(m).then(q(p), s); })); };
  });
  b('rsvp/instrument', ['./config', './utils', 'exports'], (a, d, e) => {
    const f = a.config; const g = d.now; e.default = function (a, d, e) {
      try {
        f.trigger(a, {
          guid: d._guidKey + d._id, eventName: a, detail: d._detail, childGuid: e && d._guidKey + e._id, label: d._label, timeStamp: g(), stack: Error(d._label).stack,
        });
      } catch (n) { setTimeout(() => { throw n; }, 0); }
    };
  });
  b('rsvp/map', ['./promise', './utils', 'exports'], (a, d, e) => {
    const f = a.default; const
      g = (d.isArray, d.isFunction); e.default = function (a, d, e) { return f.all(a, e).then((a) => { if (!g(d)) throw new TypeError("You must pass a function as map's second argument."); for (var h = a.length, s = Array(h), m = 0; h > m; m++)s[m] = d(a[m]); return f.all(s, e); }); };
  });
  b('rsvp/node', ['./promise', './utils', 'exports'], (a, d, e) => {
    const f = a.default; const
      g = d.isArray; e.default = function (a, d) {
      function e() {
        for (var g = arguments.length, m = Array(g), l = 0; g > l; l++)m[l] = arguments[l]; let r; return n || q || !d ? r = this : (console.warn('Deprecation: RSVP.denodeify() doesn\'t allow setting the "this" binding anymore. Use yourFunction.bind(yourThis) instead.'), r = d), f.all(m).then(e => new f(((f, g) => {
          e.push(function () {
            for (var a = arguments.length, e = Array(a), h = 0; a > h; h++) {
              e[h] = arguments[h];
            }a = e[0]; h = e[1]; if (a)g(a); else if (n)f(e.slice(1)); else if (q) { for (var a = {}, l = e.slice(1), h = 0; h < d.length; h++)e = d[h], a[e] = l[h]; f(a); } else f(h);
          }); a.apply(r, e);
        })));
      } var n = !0 === d; var q = g(d); return e.__proto__ = a, e;
    };
  });
  b('rsvp/promise', './config ./events ./instrument ./utils ./promise/cast ./promise/all ./promise/race ./promise/resolve ./promise/reject exports'.split(' '), (a, d, e, f, g, h, k, l, n, q) => {
    function s() {} function m(a, d) {
      if (!B(a)) throw new TypeError('You must pass a resolver function as the first argument to the promise constructor'); if (!(this instanceof m)) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."); this._id = H++; this._label = d; this._subscribers = []; z.instrument && C('created', this); s !== a && p(a, this);
    } function p(a, d) { function e(a) { y(d, a); } function f(a) { x(d, a); } try { a(e, f); } catch (g) { f(g); } } function r(a, d, e, f) { a = a._subscribers; const g = a.length; a[g] = d; a[g + A] = e; a[g + D] = f; } function u(a, d) { let e; let f; const g = a._subscribers; const h = a._detail; z.instrument && C(d === A ? 'fulfilled' : 'rejected', a); for (let k = 0; k < g.length; k += 3)e = g[k], f = g[k + d], v(d, e, f, h); a._subscribers = null; } function v(a, d, e, f) {
      let g; let h; let k; let l; const m = B(e); if (m) {
        try { g = e(f), k = !0; } catch (n) {
          l = !0, h = n;
        }
      } else g = f, k = !0; t(d, g) || (m && k ? y(d, g) : l ? x(d, h) : a === A ? y(d, g) : a === D && x(d, g));
    } function t(a, d) { let e; let f = null; try { if (a === d) throw new TypeError('A promises callback cannot return that same promise.'); if (I(d) && (f = d.then, B(f))) return f.call(d, f => e ? !0 : (e = !0, void (d !== f ? y(a, f) : w(a, f))), d => e ? !0 : (e = !0, void x(a, d)), `Settle: ${a._label || ' unknown promise'}`), !0; } catch (g) { return e ? !0 : (x(a, g), !0); } return !1; } function y(a, d) { a === d ? w(a, d) : t(a, d) || w(a, d); } function w(a, d) {
      a._state === E && (a._state = F, a._detail = d, z.async(G, a));
    } function x(a, d) { a._state === E && (a._state = F, a._detail = d, z.async(J, a)); } function G(a) { u(a, a._state = A); } function J(a) { a._onerror && a._onerror(a._detail); u(a, a._state = D); } var z = a.config; var C = (d.default, e.default); var I = f.objectOrFunction; var B = f.isFunction; a = f.now; g = g.default; h = h.default; k = k.default; l = l.default; n = n.default; a = `rsvp_${a()}-`; var H = 0; q.default = m; m.cast = g; m.all = h; m.race = k; m.resolve = l; m.reject = n; var E = void 0; var F = 0; var A = 1; var D = 2; m.prototype = {
      constructor: m,
      _id: void 0,
      _guidKey: a,
      _label: void 0,
      _state: void 0,
      _detail: void 0,
      _subscribers: void 0,
      _onerror(a) { z.trigger('error', a); },
      then(a, d, e) { const f = this; this._onerror = null; const g = new this.constructor(s, e); if (this._state) { const h = arguments; z.async(() => { v(f._state, g, h[f._state - 1], f._detail); }); } else r(this, g, a, d); return z.instrument && C('chained', f, g), g; },
      catch(a, d) { return this.then(null, a, d); },
      finally(a, d) {
        const e = this.constructor; return this.then(d => e.resolve(a()).then(() => d),
          d => e.resolve(a()).then(() => { throw d; }), d);
      },
    };
  });
  b('rsvp/promise/all', ['../utils', 'exports'], (a, d) => { const e = a.isArray; const f = a.isNonThenable; d.default = function (a, d) { const k = this; return new k(((d, h) => { function q(a) { return function (e) { r[a] = e; --p === 0 && d(r); }; } function s(a) { p = 0; h(a); } if (!e(a)) throw new TypeError('You must pass an array to all.'); let m; var p = a.length; var r = Array(p); if (p === 0) return void d(r); for (let u = 0; u < a.length; u++)m = a[u], f(m) ? (r[u] = m, --p === 0 && d(r)) : k.resolve(m).then(q(u), s); }), d); }; });
  b('rsvp/promise/cast', ['exports'], (a) => { a.default = function (a, e) { return a && typeof a === 'object' && a.constructor === this ? a : new this(((e) => { e(a); }), e); }; });
  b('rsvp/promise/race', ['../utils', 'exports'], (a, d) => { const e = a.isArray; const f = (a.isFunction, a.isNonThenable); d.default = function (a, d) { let k; const l = this; return new l(((d, h) => { function s(a) { p && (p = !1, d(a)); } function m(a) { p && (p = !1, h(a)); } if (!e(a)) throw new TypeError('You must pass an array to race.'); for (var p = !0, r = 0; r < a.length; r++) { if (k = a[r], f(k)) return p = !1, void d(k); l.resolve(k).then(s, m); } }), d); }; });
  b('rsvp/promise/reject', ['exports'], (a) => { a.default = function (a, e) { return new this(((e, g) => { g(a); }), e); }; }); b('rsvp/promise/resolve', ['exports'], (a) => { a.default = function (a, e) { return a && typeof a === 'object' && a.constructor === this ? a : new this(((e) => { e(a); }), e); }; }); b('rsvp/race', ['./promise', 'exports'], (a, d) => { const e = a.default; d.default = function (a, d) { return e.race(a, d); }; });
  b('rsvp/reject', ['./promise', 'exports'], (a, d) => { const e = a.default; d.default = function (a, d) { return e.reject(a, d); }; }); b('rsvp/resolve', ['./promise', 'exports'], (a, d) => { const e = a.default; d.default = function (a, d) { return e.resolve(a, d); }; }); b('rsvp/rethrow', ['exports'], (a) => { a.default = function (a) { throw setTimeout(() => { throw a; }), a; }; });
  b('rsvp/utils', ['exports'], (a) => { function d(a) { return typeof a === 'function' || typeof a === 'object' && a !== null; }a.objectOrFunction = d; a.isFunction = function (a) { return typeof a === 'function'; }; a.isNonThenable = function (a) { return !d(a); }; a.isArray = Array.isArray ? Array.isArray : function (a) { return Object.prototype.toString.call(a) === '[object Array]'; }; a.now = Date.now || function () { return (new Date()).getTime(); }; a.keysOf = Object.keys || function (a) { const d = []; let g; for (g in a)d.push(g); return d; }; });
  b('rsvp', './rsvp/promise ./rsvp/events ./rsvp/node ./rsvp/all ./rsvp/all-settled ./rsvp/race ./rsvp/hash ./rsvp/hash-settled ./rsvp/rethrow ./rsvp/defer ./rsvp/config ./rsvp/map ./rsvp/resolve ./rsvp/reject ./rsvp/filter ./rsvp/asap exports'.split(' '), (a, d, e, f, g, h, k, l, n, q, s, m, p, r, u, v, t) => {
    function y() { w.on(...arguments); }a = a.default; d = d.default; e = e.default; f = f.default; g = g.default; h = h.default; k = k.default; l = l.default; n = n.default; q = q.default; var w = s.config; s = s.configure; m = m.default; p = p.default; r = r.default; u = u.default; if (w.async = v.default, typeof window !== 'undefined' && typeof window.__PROMISE_INSTRUMENTATION__ === 'object') { v = window.__PROMISE_INSTRUMENTATION__; s('instrument', !0); for (const x in v)v.hasOwnProperty(x) && y(x, v[x]); }t.Promise = a; t.EventTarget = d; t.all = f; t.allSettled = g; t.race = h; t.hash = k; t.hashSettled = l; t.rethrow = n; t.defer = q; t.denodeify = e; t.configure = s; t.on = y; t.off = function () { w.off(...arguments); }; t.resolve = p; t.reject = r; t.async = function (a,
      d) { w.async(a, d); }; t.map = m; t.filter = u;
  }); fb.simplelogin.util.RSVP = c('rsvp'); fb.simplelogin.util.env = {}; fb.simplelogin.util.env.hasLocalStorage = function (a) { try { if (localStorage) { localStorage.setItem('firebase-sentinel', 'test'); const d = localStorage.getItem('firebase-sentinel'); localStorage.removeItem('firebase-sentinel'); return d === 'test'; } } catch (e) {} return !1; };
  fb.simplelogin.util.env.hasSessionStorage = function (a) { try { if (sessionStorage) { sessionStorage.setItem('firebase-sentinel', 'test'); const d = sessionStorage.getItem('firebase-sentinel'); sessionStorage.removeItem('firebase-sentinel'); return d === 'test'; } } catch (e) {} return !1; }; fb.simplelogin.util.env.isMobileCordovaInAppBrowser = function () { return (window.cordova || window.CordovaInAppBrowser || window.phonegap) && /ios|iphone|ipod|ipad|android/i.test(navigator.userAgent); };
  fb.simplelogin.util.env.isMobileTriggerIoTab = function () { return window.forge && /ios|iphone|ipod|ipad|android/i.test(navigator.userAgent); }; fb.simplelogin.util.env.isWindowsMetro = function () { return !!window.Windows && /^ms-appx:/.test(location.href); }; fb.simplelogin.util.env.isChromeiOS = function () { return !!navigator.userAgent.match(/CriOS/); }; fb.simplelogin.util.env.isTwitteriOS = function () { return !!navigator.userAgent.match(/Twitter for iPhone/); }; fb.simplelogin.util.env.isFacebookiOS = function () { return !!navigator.userAgent.match(/FBAN\/FBIOS/); };
  fb.simplelogin.util.env.isWindowsPhone = function () { return !!navigator.userAgent.match(/Windows Phone/); }; fb.simplelogin.util.env.isStandaloneiOS = function () { return !!window.navigator.standalone; }; fb.simplelogin.util.env.isPhantomJS = function () { return !!navigator.userAgent.match(/PhantomJS/); };
  fb.simplelogin.util.env.isIeLT10 = function () { let a; let d = -1; const e = navigator.userAgent; return navigator.appName === 'Microsoft Internet Explorer' && (a = /MSIE ([0-9]{1,}[\.0-9]{0,})/, (a = e.match(a)) && a.length > 1 && (d = parseFloat(a[1])), d < 10) ? !0 : !1; }; fb.simplelogin.util.env.isFennec = function () { try { const a = navigator.userAgent; return a.indexOf('Fennec/') != -1 || a.indexOf('Firefox/') != -1 && a.indexOf('Android') != -1; } catch (d) {} return !1; }; fb.simplelogin.transports.XHR_ = function () {};
  fb.simplelogin.transports.XHR_.prototype.open = function (a, d, e) {
    const f = { contentType: 'application/json' }; const g = new XMLHttpRequest(); const h = (f.method || 'GET').toUpperCase(); const k = f.contentType || 'application/x-www-form-urlencoded'; let l = !1; let n; g.onreadystatechange = function () { if (!l && g.readyState === 4) { l = !0; let a; let d; try { a = fb.simplelogin.util.json.parse(g.responseText), d = a.error || null, delete a.error; } catch (f) {} return e && e(d, a); } }; d && (h === 'GET' ? (a.indexOf('?') === -1 && (a += '?'), a += this.formatQueryString(d), d = null) : (k
=== 'application/json' && (d = fb.simplelogin.util.json.stringify(d)), k === 'application/x-www-form-urlencoded' && (d = this.formatQueryString(d)))); g.open(h, a, !0); a = { 'X-Requested-With': 'XMLHttpRequest', Accept: 'application/json;text/plain', 'Content-Type': k }; f.headers = f.headers || {}; for (n in f.headers)a[n] = f.headers[n]; for (n in a)g.setRequestHeader(n, a[n]); g.send(d);
  }; fb.simplelogin.transports.XHR_.prototype.isAvailable = function () { return window.XMLHttpRequest && typeof window.XMLHttpRequest === 'function' && !fb.simplelogin.util.env.isIeLT10(); };
  fb.simplelogin.transports.XHR_.prototype.formatQueryString = function (a) { if (!a) return ''; const d = []; let e; for (e in a)d.push(`${encodeURIComponent(e)}=${encodeURIComponent(a[e])}`); return d.join('&'); }; fb.simplelogin.transports.XHR = new fb.simplelogin.transports.XHR_(); fb.simplelogin.util.validation = {}; const VALID_EMAIL_REGEX_ = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,6})+$/; fb.simplelogin.util.validation.validateArgCount = function (a, d, e, f) { let g; f < d ? g = `at least ${d}` : f > e && (g = e === 0 ? 'none' : `no more than ${e}`); if (g) throw Error(`${a} failed: Was called with ${f}${f === 1 ? ' argument.' : ' arguments.'} Expects ${g}.`); }; fb.simplelogin.util.validation.isValidEmail = function (a) { return goog.isString(a) && VALID_EMAIL_REGEX_.test(a); };
  fb.simplelogin.util.validation.isValidPassword = function (a) { return goog.isString(a); }; fb.simplelogin.util.validation.isValidNamespace = function (a) { return goog.isString(a); };
  fb.simplelogin.util.validation.errorPrefix_ = function (a, d, e) { let f = ''; switch (d) { case 1: f = e ? 'first' : 'First'; break; case 2: f = e ? 'second' : 'Second'; break; case 3: f = e ? 'third' : 'Third'; break; case 4: f = e ? 'fourth' : 'Fourth'; break; default: fb.core.util.validation.assert(!1, 'errorPrefix_ called with argumentNumber > 4.  Need to update it?'); } return a = `${a} failed: ${f} argument `; };
  fb.simplelogin.util.validation.validateNamespace = function (a, d, e, f) { if ((!f || goog.isDef(e)) && !goog.isString(e)) throw Error(`${fb.simplelogin.util.validation.errorPrefix_(a, d, f)}must be a valid firebase namespace.`); }; fb.simplelogin.util.validation.validateCallback = function (a, d, e, f) { if ((!f || goog.isDef(e)) && !goog.isFunction(e)) throw Error(`${fb.simplelogin.util.validation.errorPrefix_(a, d, f)}must be a valid function.`); };
  fb.simplelogin.util.validation.validateString = function (a, d, e, f) { if ((!f || goog.isDef(e)) && !goog.isString(e)) throw Error(`${fb.simplelogin.util.validation.errorPrefix_(a, d, f)}must be a valid string.`); }; fb.simplelogin.util.validation.validateContextObject = function (a, d, e, f) { if (!f || goog.isDef(e)) if (!goog.isObject(e) || e === null) throw Error(`${fb.simplelogin.util.validation.errorPrefix_(a, d, f)}must be a valid context object.`); }; const CALLBACK_NAMESPACE = '_FirebaseSimpleLoginJSONP'; fb.simplelogin.transports.JSONP_ = function () { window[CALLBACK_NAMESPACE] = window[CALLBACK_NAMESPACE] || {}; }; fb.simplelogin.transports.JSONP_.prototype.open = function (a, d, e) { a += /\?/.test(a) ? '' : '?'; a += '&transport=jsonp'; for (const f in d)a += `&${encodeURIComponent(f)}=${encodeURIComponent(d[f])}`; d = this.generateRequestId_(); a += `&callback=${encodeURIComponent(`${CALLBACK_NAMESPACE}.${d}`)}`; this.registerCallback_(d, e); this.writeScriptTag_(d, a, e); };
  fb.simplelogin.transports.JSONP_.prototype.generateRequestId_ = function () { return `_FirebaseJSONP${(new Date()).getTime()}${Math.floor(100 * Math.random())}`; }; fb.simplelogin.transports.JSONP_.prototype.registerCallback_ = function (a, d) { const e = this; window[CALLBACK_NAMESPACE][a] = function (f) { const g = f.error || null; delete f.error; d(g, f); e.removeCallback_(a); }; };
  fb.simplelogin.transports.JSONP_.prototype.removeCallback_ = function (a) { setTimeout(() => { delete window[CALLBACK_NAMESPACE][a]; const d = document.getElementById(a); d && d.parentNode.removeChild(d); }, 0); };
  fb.simplelogin.transports.JSONP_.prototype.writeScriptTag_ = function (a, d, e) {
    const f = this; setTimeout(() => { try { const g = document.createElement('script'); g.type = 'text/javascript'; g.id = a; g.async = !0; g.src = d; g.onerror = function () { const d = document.getElementById(a); d !== null && d.parentNode.removeChild(d); e && e(f.formatError_({ code: 'SERVER_ERROR', message: 'An unknown server error occurred.' })); }; document.getElementsByTagName('head')[0].appendChild(g); } catch (h) { e && e(f.formatError_({ code: 'SERVER_ERROR', message: 'An unknown server error occurred.' })); } },
      0);
  }; fb.simplelogin.transports.JSONP_.prototype.formatError_ = function (a) { let d; a ? (d = Error(a.message), d.code = a.code || 'UNKNOWN_ERROR') : (d = Error(), d.code = 'UNKNOWN_ERROR'); return d; }; fb.simplelogin.transports.JSONP = new fb.simplelogin.transports.JSONP_(); fb.simplelogin.providers = {}; fb.simplelogin.providers.Password_ = function () {}; fb.simplelogin.providers.Password_.prototype.getTransport_ = function () { return fb.simplelogin.transports.XHR.isAvailable() ? fb.simplelogin.transports.XHR : fb.simplelogin.transports.JSONP; };
  fb.simplelogin.providers.Password_.prototype.login = function (a, d) { const e = `${fb.simplelogin.Vars.getApiHost()}/auth/firebase`; if (!fb.simplelogin.util.validation.isValidNamespace(a.firebase)) return d && d('INVALID_FIREBASE'); this.getTransport_().open(e, a, d); };
  fb.simplelogin.providers.Password_.prototype.createUser = function (a, d) { const e = `${fb.simplelogin.Vars.getApiHost()}/auth/firebase/create`; if (!fb.simplelogin.util.validation.isValidNamespace(a.firebase)) return d && d('INVALID_FIREBASE'); if (!fb.simplelogin.util.validation.isValidEmail(a.email)) return d && d('INVALID_EMAIL'); if (!fb.simplelogin.util.validation.isValidPassword(a.password)) return d && d('INVALID_PASSWORD'); this.getTransport_().open(e, a, d); };
  fb.simplelogin.providers.Password_.prototype.changePassword = function (a, d) { const e = `${fb.simplelogin.Vars.getApiHost()}/auth/firebase/update`; if (!fb.simplelogin.util.validation.isValidNamespace(a.firebase)) return d && d('INVALID_FIREBASE'); if (!fb.simplelogin.util.validation.isValidEmail(a.email)) return d && d('INVALID_EMAIL'); if (!fb.simplelogin.util.validation.isValidPassword(a.newPassword)) return d && d('INVALID_PASSWORD'); this.getTransport_().open(e, a, d); };
  fb.simplelogin.providers.Password_.prototype.removeUser = function (a, d) { const e = `${fb.simplelogin.Vars.getApiHost()}/auth/firebase/remove`; if (!fb.simplelogin.util.validation.isValidNamespace(a.firebase)) return d && d('INVALID_FIREBASE'); if (!fb.simplelogin.util.validation.isValidEmail(a.email)) return d && d('INVALID_EMAIL'); if (!fb.simplelogin.util.validation.isValidPassword(a.password)) return d && d('INVALID_PASSWORD'); this.getTransport_().open(e, a, d); };
  fb.simplelogin.providers.Password_.prototype.sendPasswordResetEmail = function (a, d) { const e = `${fb.simplelogin.Vars.getApiHost()}/auth/firebase/reset_password`; if (!fb.simplelogin.util.validation.isValidNamespace(a.firebase)) return d && d('INVALID_FIREBASE'); if (!fb.simplelogin.util.validation.isValidEmail(a.email)) return d && d('INVALID_EMAIL'); this.getTransport_().open(e, a, d); }; fb.simplelogin.providers.Password = new fb.simplelogin.providers.Password_(); fb.simplelogin.transports.WindowsMetroAuthBroker_ = function () {};
  fb.simplelogin.transports.WindowsMetroAuthBroker_.prototype.open = function (a, d, e) {
    let f; let g; let h; let k; let l; let n; try { f = window.Windows.Foundation.Uri, g = window.Windows.Security.Authentication.Web.WebAuthenticationOptions, h = window.Windows.Security.Authentication.Web.WebAuthenticationBroker, k = h.authenticateAsync; } catch (q) { return e({ code: 'WINDOWS_METRO', message: '"Windows.Security.Authentication.Web.WebAuthenticationBroker" required when using Firebase Simple Login in Windows Metro context' }); }l = !1; n = function () {
      const a = Array.prototype.slice.apply(arguments);
      l || (l = !0, e(...a));
    }; a = new f(`${a}&transport=internal-redirect-hash`); f = new f(`${fb.simplelogin.Vars.getApiHost()}/blank/page.html`); k(g.none, a, f).done((a) => { let d; if (a && a.responseData) try { const e = fb.simplelogin.util.misc.parseUrl(a.responseData); const f = fb.simplelogin.util.misc.parseQuerystring(e.hash); a = {}; for (const g in f)a[g] = fb.simplelogin.util.json.parse(decodeURIComponent(f[g])); d = a; } catch (h) {}d && d.token && d.user ? n(null, d) : d && d.error ? n(d.error) : n({ code: 'RESPONSE_PAYLOAD_ERROR', message: 'Unable to parse response payload for Windows.' }); },
      (a) => { n({ code: 'UNKNOWN_ERROR', message: 'An unknown error occurred for Windows.' }); });
  }; fb.simplelogin.transports.WindowsMetroAuthBroker = new fb.simplelogin.transports.WindowsMetroAuthBroker_(); goog.string = {}; goog.string.Unicode = { NBSP: '\u00a0' }; goog.string.startsWith = function (a, d) { return a.lastIndexOf(d, 0) == 0; }; goog.string.endsWith = function (a, d) { const e = a.length - d.length; return e >= 0 && a.indexOf(d, e) == e; }; goog.string.caseInsensitiveStartsWith = function (a, d) { return goog.string.caseInsensitiveCompare(d, a.substr(0, d.length)) == 0; }; goog.string.caseInsensitiveEndsWith = function (a, d) { return goog.string.caseInsensitiveCompare(d, a.substr(a.length - d.length, d.length)) == 0; };
  goog.string.caseInsensitiveEquals = function (a, d) { return a.toLowerCase() == d.toLowerCase(); }; goog.string.subs = function (a, d) { for (var e = a.split('%s'), f = '', g = Array.prototype.slice.call(arguments, 1); g.length && e.length > 1;)f += e.shift() + g.shift(); return f + e.join('%s'); }; goog.string.collapseWhitespace = function (a) { return a.replace(/[\s\xa0]+/g, ' ').replace(/^\s+|\s+$/g, ''); }; goog.string.isEmpty = function (a) { return /^[\s\xa0]*$/.test(a); }; goog.string.isEmptySafe = function (a) { return goog.string.isEmpty(goog.string.makeSafe(a)); };
  goog.string.isBreakingWhitespace = function (a) { return !/[^\t\n\r ]/.test(a); }; goog.string.isAlpha = function (a) { return !/[^a-zA-Z]/.test(a); }; goog.string.isNumeric = function (a) { return !/[^0-9]/.test(a); }; goog.string.isAlphaNumeric = function (a) { return !/[^a-zA-Z0-9]/.test(a); }; goog.string.isSpace = function (a) { return a == ' '; }; goog.string.isUnicodeChar = function (a) { return a.length == 1 && a >= ' ' && a <= '~' || a >= '\u0080' && a <= '\ufffd'; }; goog.string.stripNewlines = function (a) { return a.replace(/(\r\n|\r|\n)+/g, ' '); };
  goog.string.canonicalizeNewlines = function (a) { return a.replace(/(\r\n|\r|\n)/g, '\n'); }; goog.string.normalizeWhitespace = function (a) { return a.replace(/\xa0|\s/g, ' '); }; goog.string.normalizeSpaces = function (a) { return a.replace(/\xa0|[ \t]+/g, ' '); }; goog.string.collapseBreakingSpaces = function (a) { return a.replace(/[\t\r\n ]+/g, ' ').replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, ''); }; goog.string.trim = function (a) { return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, ''); };
  goog.string.trimLeft = function (a) { return a.replace(/^[\s\xa0]+/, ''); }; goog.string.trimRight = function (a) { return a.replace(/[\s\xa0]+$/, ''); }; goog.string.caseInsensitiveCompare = function (a, d) { const e = String(a).toLowerCase(); const f = String(d).toLowerCase(); return e < f ? -1 : e == f ? 0 : 1; }; goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
  goog.string.numerateCompare = function (a, d) { if (a == d) return 0; if (!a) return -1; if (!d) return 1; for (var e = a.toLowerCase().match(goog.string.numerateCompareRegExp_), f = d.toLowerCase().match(goog.string.numerateCompareRegExp_), g = Math.min(e.length, f.length), h = 0; h < g; h++) { const k = e[h]; const l = f[h]; if (k != l) return e = parseInt(k, 10), !isNaN(e) && (f = parseInt(l, 10), !isNaN(f) && e - f) ? e - f : k < l ? -1 : 1; } return e.length != f.length ? e.length - f.length : a < d ? -1 : 1; }; goog.string.urlEncode = function (a) { return encodeURIComponent(String(a)); };
  goog.string.urlDecode = function (a) { return decodeURIComponent(a.replace(/\+/g, ' ')); }; goog.string.newLineToBr = function (a, d) { return a.replace(/(\r\n|\r|\n)/g, d ? '<br />' : '<br>'); };
  goog.string.htmlEscape = function (a, d) {
    if (d) {
      return a.replace(goog.string.amperRe_, '&amp;').replace(goog.string.ltRe_, '&lt;').replace(goog.string.gtRe_, '&gt;').replace(goog.string.quotRe_, '&quot;')
        .replace(goog.string.singleQuoteRe_, '&#39;');
    } if (!goog.string.allRe_.test(a)) return a; a.indexOf('&') != -1 && (a = a.replace(goog.string.amperRe_, '&amp;')); a.indexOf('<') != -1 && (a = a.replace(goog.string.ltRe_, '&lt;')); a.indexOf('>') != -1 && (a = a.replace(goog.string.gtRe_, '&gt;')); a.indexOf('"') != -1 && (a = a.replace(goog.string.quotRe_,
      '&quot;')); a.indexOf("'") != -1 && (a = a.replace(goog.string.singleQuoteRe_, '&#39;')); return a;
  }; goog.string.amperRe_ = /&/g; goog.string.ltRe_ = /</g; goog.string.gtRe_ = />/g; goog.string.quotRe_ = /"/g; goog.string.singleQuoteRe_ = /'/g; goog.string.allRe_ = /[&<>"']/; goog.string.unescapeEntities = function (a) { return goog.string.contains(a, '&') ? 'document' in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a; };
  goog.string.unescapeEntitiesWithDocument = function (a, d) { return goog.string.contains(a, '&') ? goog.string.unescapeEntitiesUsingDom_(a, d) : a; };
  goog.string.unescapeEntitiesUsingDom_ = function (a, d) {
    const e = {
      '&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '"',
    }; let f; f = d ? d.createElement('div') : document.createElement('div'); return a.replace(goog.string.HTML_ENTITY_PATTERN_, (a, d) => { let k = e[a]; if (k) return k; if (d.charAt(0) == '#') { const l = Number(`0${d.substr(1)}`); isNaN(l) || (k = String.fromCharCode(l)); }k || (f.innerHTML = `${a} `, k = f.firstChild.nodeValue.slice(0, -1)); return e[a] = k; });
  };
  goog.string.unescapePureXmlEntities_ = function (a) { return a.replace(/&([^;]+);/g, (a, e) => { switch (e) { case 'amp': return '&'; case 'lt': return '<'; case 'gt': return '>'; case 'quot': return '"'; default: if (e.charAt(0) == '#') { const f = Number(`0${e.substr(1)}`); if (!isNaN(f)) return String.fromCharCode(f); } return a; } }); }; goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g; goog.string.whitespaceEscape = function (a, d) { return goog.string.newLineToBr(a.replace(/ {2}/g, ' &#160;'), d); };
  goog.string.stripQuotes = function (a, d) { for (let e = d.length, f = 0; f < e; f++) { const g = e == 1 ? d : d.charAt(f); if (a.charAt(0) == g && a.charAt(a.length - 1) == g) return a.substring(1, a.length - 1); } return a; }; goog.string.truncate = function (a, d, e) { e && (a = goog.string.unescapeEntities(a)); a.length > d && (a = `${a.substring(0, d - 3)}...`); e && (a = goog.string.htmlEscape(a)); return a; };
  goog.string.truncateMiddle = function (a, d, e, f) { e && (a = goog.string.unescapeEntities(a)); if (f && a.length > d) { f > d && (f = d); var g = a.length - f; a = `${a.substring(0, d - f)}...${a.substring(g)}`; } else a.length > d && (f = Math.floor(d / 2), g = a.length - f, a = `${a.substring(0, f + d % 2)}...${a.substring(g)}`); e && (a = goog.string.htmlEscape(a)); return a; }; goog.string.specialEscapeChars_ = {
    '\x00': '\\0', '\b': '\\b', '\f': '\\f', '\n': '\\n', '\r': '\\r', '\t': '\\t', '\x0B': '\\x0B', '"': '\\"', '\\': '\\\\',
  }; goog.string.jsEscapeCache_ = { "'": "\\'" };
  goog.string.quote = function (a) { a = String(a); if (a.quote) return a.quote(); for (var d = ['"'], e = 0; e < a.length; e++) { const f = a.charAt(e); const g = f.charCodeAt(0); d[e + 1] = goog.string.specialEscapeChars_[f] || (g > 31 && g < 127 ? f : goog.string.escapeChar(f)); }d.push('"'); return d.join(''); }; goog.string.escapeString = function (a) { for (var d = [], e = 0; e < a.length; e++)d[e] = goog.string.escapeChar(a.charAt(e)); return d.join(''); };
  goog.string.escapeChar = function (a) { if (a in goog.string.jsEscapeCache_) return goog.string.jsEscapeCache_[a]; if (a in goog.string.specialEscapeChars_) return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a]; let d = a; const e = a.charCodeAt(0); if (e > 31 && e < 127)d = a; else { if (e < 256) { if (d = '\\x', e < 16 || e > 256)d += '0'; } else d = '\\u', e < 4096 && (d += '0'); d += e.toString(16).toUpperCase(); } return goog.string.jsEscapeCache_[a] = d; }; goog.string.toMap = function (a) { for (var d = {}, e = 0; e < a.length; e++)d[a.charAt(e)] = !0; return d; };
  goog.string.contains = function (a, d) { return a.indexOf(d) != -1; }; goog.string.countOf = function (a, d) { return a && d ? a.split(d).length - 1 : 0; }; goog.string.removeAt = function (a, d, e) { let f = a; d >= 0 && d < a.length && e > 0 && (f = a.substr(0, d) + a.substr(d + e, a.length - d - e)); return f; }; goog.string.remove = function (a, d) { const e = RegExp(goog.string.regExpEscape(d), ''); return a.replace(e, ''); }; goog.string.removeAll = function (a, d) { const e = RegExp(goog.string.regExpEscape(d), 'g'); return a.replace(e, ''); };
  goog.string.regExpEscape = function (a) { return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, '\\$1').replace(/\x08/g, '\\x08'); }; goog.string.repeat = function (a, d) { return Array(d + 1).join(a); }; goog.string.padNumber = function (a, d, e) { a = goog.isDef(e) ? a.toFixed(e) : String(a); e = a.indexOf('.'); e == -1 && (e = a.length); return goog.string.repeat('0', Math.max(0, d - e)) + a; }; goog.string.makeSafe = function (a) { return a == null ? '' : String(a); }; goog.string.buildString = function (a) { return Array.prototype.join.call(arguments, ''); };
  goog.string.getRandomString = function () { return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36); };
  goog.string.compareVersions = function (a, d) {
    for (var e = 0, f = goog.string.trim(String(a)).split('.'), g = goog.string.trim(String(d)).split('.'), h = Math.max(f.length, g.length), k = 0; e == 0 && k < h; k++) {
      const l = f[k] || ''; const n = g[k] || ''; const q = RegExp('(\\d*)(\\D*)', 'g'); const s = RegExp('(\\d*)(\\D*)', 'g'); do {
        const m = q.exec(l) || ['', '', '']; const p = s.exec(n) || ['', '', '']; if (m[0].length == 0 && p[0].length == 0) break; var e = m[1].length == 0 ? 0 : parseInt(m[1], 10); const r = p[1].length == 0 ? 0 : parseInt(p[1], 10); var e = goog.string.compareElements_(e, r) || goog.string.compareElements_(m[2].length
== 0, p[2].length == 0) || goog.string.compareElements_(m[2], p[2]);
      } while (e == 0);
    } return e;
  }; goog.string.compareElements_ = function (a, d) { return a < d ? -1 : a > d ? 1 : 0; }; goog.string.HASHCODE_MAX_ = 4294967296; goog.string.hashCode = function (a) { for (var d = 0, e = 0; e < a.length; ++e)d = 31 * d + a.charCodeAt(e), d %= goog.string.HASHCODE_MAX_; return d; }; goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0; goog.string.createUniqueString = function () { return `goog_${goog.string.uniqueStringCounter_++}`; };
  goog.string.toNumber = function (a) { const d = Number(a); return d == 0 && goog.string.isEmpty(a) ? NaN : d; }; goog.string.isLowerCamelCase = function (a) { return /^[a-z]+([A-Z][a-z]*)*$/.test(a); }; goog.string.isUpperCamelCase = function (a) { return /^([A-Z][a-z]*)+$/.test(a); }; goog.string.toCamelCase = function (a) { return String(a).replace(/\-([a-z])/g, (a, e) => e.toUpperCase()); }; goog.string.toSelectorCase = function (a) { return String(a).replace(/([A-Z])/g, '-$1').toLowerCase(); };
  goog.string.toTitleCase = function (a, d) { const e = goog.isString(d) ? goog.string.regExpEscape(d) : '\\s'; return a.replace(RegExp(`(^${e ? `|[${e}]+` : ''})([a-z])`, 'g'), (a, d, e) => d + e.toUpperCase()); }; goog.string.parseInt = function (a) { isFinite(a) && (a = String(a)); return goog.isString(a) ? /^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN; }; goog.string.splitLimit = function (a, d, e) { a = a.split(d); for (var f = []; e > 0 && a.length;)f.push(a.shift()), e--; a.length && f.push(a.join(d)); return f; }; const sessionPersistentStorageKey = 'firebaseSession'; const hasLocalStorage = fb.simplelogin.util.env.hasLocalStorage(); fb.simplelogin.SessionStore_ = function () {}; fb.simplelogin.SessionStore_.prototype.set = function (a, d) { if (hasLocalStorage) try { localStorage.setItem(sessionPersistentStorageKey, fb.simplelogin.util.json.stringify(a)); } catch (e) {} }; fb.simplelogin.SessionStore_.prototype.get = function () { if (hasLocalStorage) { try { const a = localStorage.getItem(sessionPersistentStorageKey); if (a) return fb.simplelogin.util.json.parse(a); } catch (d) {} return null; } };
  fb.simplelogin.SessionStore_.prototype.clear = function () { hasLocalStorage && localStorage.removeItem(sessionPersistentStorageKey); }; fb.simplelogin.SessionStore = new fb.simplelogin.SessionStore_(); const CLIENT_VERSION = '1.6.3';
  fb.simplelogin.client = function (a, d, e, f) {
    function g(a, d, e) { setTimeout(() => { a(d, e); }, 0); } this.mRef = a; this.mNamespace = fb.simplelogin.util.misc.parseSubdomain(a.toString()); this.sessionLengthDays = null; window._FirebaseSimpleLogin = window._FirebaseSimpleLogin || {}; window._FirebaseSimpleLogin.callbacks = window._FirebaseSimpleLogin.callbacks || []; window._FirebaseSimpleLogin.callbacks.push({ cb: d, ctx: e }); window.location.protocol !== 'file:' || fb.simplelogin.util.env.isPhantomJS() || fb.simplelogin.util.env.isMobileCordovaInAppBrowser() || fb.simplelogin.util.misc.warn("FirebaseSimpleLogin(): Due to browser security restrictions, loading applications via `file://*` URLs will prevent popup-based authentication providers from working properly. When testing locally, you'll need to run a barebones webserver on your machine rather than loading your test files via `file://*`. The easiest way to run a barebones server on your local machine is to `cd` to the root directory of your code and run `python -m SimpleHTTPServer`, which will allow you to access your content via `http://127.0.0.1:8000/*`.");
    f && fb.simplelogin.Vars.setApiHost(f); this.mLoginStateChange = function (a, d) { const e = window._FirebaseSimpleLogin.callbacks || []; Array.prototype.slice.apply(arguments); for (let f = 0; f < e.length; f++) { const q = e[f]; let s = !!a || typeof q.user === 'undefined'; if (!s) { var m; var p; q.user && q.user.firebaseAuthToken && (m = q.user.firebaseAuthToken); d && d.firebaseAuthToken && (p = d.firebaseAuthToken); s = (m || p) && m !== p; }window._FirebaseSimpleLogin.callbacks[f].user = d || null; s && g(goog.bind(q.cb, q.ctx), a, d); } }; this.resumeSession();
  };
  fb.simplelogin.client.prototype.setApiHost = function (a) { fb.simplelogin.Vars.setApiHost(a); }; goog.exportSymbol('fb.simplelogin.client.prototype.setApiHost', fb.simplelogin.client.prototype.setApiHost);
  fb.simplelogin.client.prototype.resumeSession = function () {
    const a = this; let d; try { d = sessionStorage.getItem('firebaseRequestId'), sessionStorage.removeItem('firebaseRequestId'); } catch (e) {} if (d) {
      let f = fb.simplelogin.transports.JSONP; fb.simplelogin.transports.XHR.isAvailable() && (f = fb.simplelogin.transports.XHR); f.open(`${fb.simplelogin.Vars.getApiHost()}/auth/session`, { requestId: d, firebase: a.mNamespace }, (d, e) => {
        e && e.token && e.user ? a.attemptAuth(e.token, e.user, !0) : d ? (fb.simplelogin.SessionStore.clear(), a.mLoginStateChange(d))
          : (fb.simplelogin.SessionStore.clear(), a.mLoginStateChange(null, null));
      });
    } else (d = fb.simplelogin.SessionStore.get()) && d.token && d.user ? a.attemptAuth(d.token, d.user, !1) : a.mLoginStateChange(null, null);
  };
  fb.simplelogin.client.prototype.attemptAuth = function (a, d, e, f, g) { const h = this; this.mRef.auth(a, (k, l) => { k ? (fb.simplelogin.SessionStore.clear(), h.mLoginStateChange(null, null), g && g()) : (e && fb.simplelogin.SessionStore.set({ token: a, user: d, sessionKey: d.sessionKey }, h.sessionLengthDays), typeof l === 'function' && l(), delete d.sessionKey, d.firebaseAuthToken = a, h.mLoginStateChange(null, d), f && f(d)); }, (a) => { fb.simplelogin.SessionStore.clear(); h.mLoginStateChange(null, null); g && g(); }); };
  fb.simplelogin.client.prototype.login = function () {
    fb.simplelogin.util.validation.validateString('FirebaseSimpleLogin.login()', 1, arguments[0], !1); fb.simplelogin.util.validation.validateArgCount('FirebaseSimpleLogin.login()', 1, 2, arguments.length); const a = arguments[0].toLowerCase(); const d = arguments[1] || {}; this.sessionLengthDays = d.rememberMe ? 30 : null; switch (a) {
      case 'anonymous': return this.loginAnonymously(d); case 'facebook-token': return this.loginWithFacebookToken(d); case 'github': return this.loginWithGithub(d);
      case 'google-token': return this.loginWithGoogleToken(d); case 'password': return this.loginWithPassword(d); case 'twitter-token': return this.loginWithTwitterToken(d); case 'facebook': return d.access_token ? this.loginWithFacebookToken(d) : this.loginWithFacebook(d); case 'google': return d.access_token ? this.loginWithGoogleToken(d) : this.loginWithGoogle(d); case 'twitter': return d.oauth_token && d.oauth_token_secret ? this.loginWithTwitterToken(d) : this.loginWithTwitter(d); default: throw Error(`FirebaseSimpleLogin.login(${
        a}) failed: unrecognized authentication provider`);
    }
  }; goog.exportSymbol('fb.simplelogin.client.prototype.login', fb.simplelogin.client.prototype.login);
  fb.simplelogin.client.prototype.loginAnonymously = function (a) { const d = this; return new fb.simplelogin.util.RSVP.Promise(((e, f) => { a.firebase = d.mNamespace; a.v = CLIENT_VERSION; fb.simplelogin.transports.JSONP.open(`${fb.simplelogin.Vars.getApiHost()}/auth/anonymous`, a, (a, h) => { if (a || !h.token) { const k = fb.simplelogin.Errors.format(a); d.mLoginStateChange(k, null); f(k); } else d.attemptAuth(h.token, h.user, !0, e, f); }); })); };
  fb.simplelogin.client.prototype.loginWithPassword = function (a) { const d = this; return new fb.simplelogin.util.RSVP.Promise(((e, f) => { a.firebase = d.mNamespace; a.v = CLIENT_VERSION; fb.simplelogin.providers.Password.login(a, (a, h) => { if (a || !h.token) { const k = fb.simplelogin.Errors.format(a); d.mLoginStateChange(k, null); f(k); } else d.attemptAuth(h.token, h.user, !0, e, f); }); })); }; fb.simplelogin.client.prototype.loginWithGithub = function (a) { a.height = 850; a.width = 950; return this.loginViaOAuth('github', a); };
  fb.simplelogin.client.prototype.loginWithGoogle = function (a) { a.height = 650; a.width = 575; return this.loginViaOAuth('google', a); }; fb.simplelogin.client.prototype.loginWithFacebook = function (a) { a.height = 400; a.width = 535; return this.loginViaOAuth('facebook', a); }; fb.simplelogin.client.prototype.loginWithTwitter = function (a) { return this.loginViaOAuth('twitter', a); }; fb.simplelogin.client.prototype.loginWithFacebookToken = function (a) { return this.loginViaToken('facebook', a); };
  fb.simplelogin.client.prototype.loginWithGoogleToken = function (a) { return this.loginViaToken('google', a); }; fb.simplelogin.client.prototype.loginWithTwitterToken = function (a) { return this.loginViaToken('twitter', a); }; fb.simplelogin.client.prototype.logout = function () { fb.simplelogin.SessionStore.clear(); this.mRef.unauth(); this.mLoginStateChange(null, null); }; goog.exportSymbol('fb.simplelogin.client.prototype.logout', fb.simplelogin.client.prototype.logout);
  fb.simplelogin.client.prototype.loginViaToken = function (a, d, e) { d = d || {}; d.v = CLIENT_VERSION; const f = this; const g = `${fb.simplelogin.Vars.getApiHost()}/auth/${a}/token?firebase=${f.mNamespace}`; return new fb.simplelogin.util.RSVP.Promise(((a, e) => { fb.simplelogin.transports.JSONP.open(g, d, (d, g) => { if (!d && g.token && g.user)f.attemptAuth(g.token, g.user, !0, a, e); else { const q = fb.simplelogin.Errors.format(d); f.mLoginStateChange(q); e(q); } }); })); };
  fb.simplelogin.client.prototype.loginViaOAuth = function (a, d, e) {
    d = d || {}; const f = this; let g = `${fb.simplelogin.Vars.getApiHost()}/auth/${a}?firebase=${f.mNamespace}`; d.scope && (g += `&scope=${d.scope}`); g += `&v=${encodeURIComponent(CLIENT_VERSION)}`; a = {
      menubar: 0, location: 0, resizable: 0, scrollbars: 1, status: 0, dialog: 1, width: 700, height: 375,
    }; d.height && (a.height = d.height, delete d.height); d.width && (a.width = d.width, delete d.width); e = fb.simplelogin.util.env.isMobileCordovaInAppBrowser() ? 'mobile-phonegap' : fb.simplelogin.util.env.isMobileTriggerIoTab()
      ? 'mobile-triggerio' : fb.simplelogin.util.env.isWindowsMetro() ? 'windows-metro' : 'desktop'; let h; if (e === 'desktop') { h = fb.simplelogin.transports.WinChan; e = []; for (var k in a)e.push(`${k}=${a[k]}`); d.url += '&transport=winchan'; d.relay_url = `${fb.simplelogin.Vars.getApiHost()}/auth/channel`; d.window_features = e.join(','); } else e === 'mobile-phonegap' ? h = fb.simplelogin.transports.CordovaInAppBrowser : e === 'mobile-triggerio' ? h = fb.simplelogin.transports.TriggerIoTab : e === 'windows-metro' && (h = fb.simplelogin.transports.WindowsMetroAuthBroker);
    if (d.preferRedirect || fb.simplelogin.util.env.isChromeiOS() || fb.simplelogin.util.env.isWindowsPhone() || fb.simplelogin.util.env.isStandaloneiOS() || fb.simplelogin.util.env.isTwitteriOS() || fb.simplelogin.util.env.isFacebookiOS()) { k = goog.string.getRandomString() + goog.string.getRandomString(); try { sessionStorage.setItem('firebaseRequestId', k); } catch (l) {}g += `&requestId=${k}&fb_redirect_uri=${encodeURIComponent(window.location.href)}`; window.location = g; } else {
      return new fb.simplelogin.util.RSVP.Promise(((a,
        e) => { h.open(g, d, (d, g) => { if (g && g.token && g.user)f.attemptAuth(g.token, g.user, !0, a, e); else { let h = d || { code: 'UNKNOWN_ERROR', message: 'An unknown error occurred.' }; d === 'unknown closed window' ? h = { code: 'USER_DENIED', message: 'User cancelled the authentication request.' } : g && g.error && (h = g.error); h = fb.simplelogin.Errors.format(h); f.mLoginStateChange(h); e(h); } }); }));
    }
  };
  fb.simplelogin.client.prototype.manageFirebaseUsers = function (a, d, e) { d.firebase = this.mNamespace; return new fb.simplelogin.util.RSVP.Promise(((f, g) => { fb.simplelogin.providers.Password[a](d, (a, d) => { if (a) { const l = fb.simplelogin.Errors.format(a); g(l); return e && e(l, null); }f(d); return e && e(null, d); }); })); }; fb.simplelogin.client.prototype.createUser = function (a, d, e) { return this.manageFirebaseUsers('createUser', { email: a, password: d }, e); }; goog.exportSymbol('fb.simplelogin.client.prototype.createUser', fb.simplelogin.client.prototype.createUser);
  fb.simplelogin.client.prototype.changePassword = function (a, d, e, f) { return this.manageFirebaseUsers('changePassword', { email: a, oldPassword: d, newPassword: e }, a => f && f(a)); }; goog.exportSymbol('fb.simplelogin.client.prototype.changePassword', fb.simplelogin.client.prototype.changePassword); fb.simplelogin.client.prototype.removeUser = function (a, d, e) { return this.manageFirebaseUsers('removeUser', { email: a, password: d }, a => e && e(a)); };
  goog.exportSymbol('fb.simplelogin.client.prototype.removeUser', fb.simplelogin.client.prototype.removeUser); fb.simplelogin.client.prototype.sendPasswordResetEmail = function (a, d) { return this.manageFirebaseUsers('sendPasswordResetEmail', { email: a }, a => d && d(a)); }; goog.exportSymbol('fb.simplelogin.client.prototype.sendPasswordResetEmail', fb.simplelogin.client.prototype.sendPasswordResetEmail); fb.simplelogin.client.onOpen = function (a) { fb.simplelogin.transports.WinChan.onOpen(a); };
  goog.exportSymbol('fb.simplelogin.client.onOpen', fb.simplelogin.client.onOpen); fb.simplelogin.client.VERSION = function () { return CLIENT_VERSION; }; goog.exportSymbol('fb.simplelogin.client.VERSION', fb.simplelogin.client.VERSION); const FirebaseSimpleLogin = function (a, d, e, f) {
    fb.simplelogin.util.validation.validateArgCount('new FirebaseSimpleLogin', 1, 4, arguments.length); fb.simplelogin.util.validation.validateCallback('new FirebaseSimpleLogin', 2, d, !1); if (goog.isString(a)) throw Error('new FirebaseSimpleLogin(): Oops, it looks like you passed a string instead of a Firebase reference (i.e. new Firebase(<firebaseURL>)).'); const g = fb.simplelogin.util.misc.parseSubdomain(a.toString()); if (!goog.isString(g)) throw Error('new FirebaseSimpleLogin(): First argument must be a valid Firebase reference (i.e. new Firebase(<firebaseURL>)).');
    const h = new fb.simplelogin.client(a, d, e, f); return {
      setApiHost(a) { fb.simplelogin.util.validation.validateArgCount('FirebaseSimpleLogin.setApiHost', 1, 1, arguments.length); return h.setApiHost(a); },
      login() { return h.login(...arguments); },
      logout() { fb.simplelogin.util.validation.validateArgCount('FirebaseSimpleLogin.logout', 0, 0, arguments.length); return h.logout(); },
      createUser(a, d, e) {
        fb.simplelogin.util.validation.validateArgCount('FirebaseSimpleLogin.createUser', 2, 3, arguments.length);
        fb.simplelogin.util.validation.validateCallback('FirebaseSimpleLogin.createUser', 3, e, !0); return h.createUser(a, d, e);
      },
      changePassword(a, d, e, f) { fb.simplelogin.util.validation.validateArgCount('FirebaseSimpleLogin.changePassword', 3, 4, arguments.length); fb.simplelogin.util.validation.validateCallback('FirebaseSimpleLogin.changePassword', 4, f, !0); return h.changePassword(a, d, e, f); },
      removeUser(a, d, e) {
        fb.simplelogin.util.validation.validateArgCount('FirebaseSimpleLogin.removeUser', 2, 3, arguments.length);
        fb.simplelogin.util.validation.validateCallback('FirebaseSimpleLogin.removeUser', 3, e, !0); return h.removeUser(a, d, e);
      },
      sendPasswordResetEmail(a, d) { fb.simplelogin.util.validation.validateArgCount('FirebaseSimpleLogin.sendPasswordResetEmail', 1, 2, arguments.length); fb.simplelogin.util.validation.validateCallback('FirebaseSimpleLogin.sendPasswordResetEmail', 2, d, !0); return h.sendPasswordResetEmail(a, d); },
    };
  }; goog.exportSymbol('FirebaseSimpleLogin', FirebaseSimpleLogin); FirebaseSimpleLogin.onOpen = function (a) { fb.simplelogin.client.onOpen(a); };
  goog.exportProperty(FirebaseSimpleLogin, 'onOpen', FirebaseSimpleLogin.onOpen); FirebaseSimpleLogin.VERSION = fb.simplelogin.client.VERSION();
}());
